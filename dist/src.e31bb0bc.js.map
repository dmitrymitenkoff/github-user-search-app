{"version":3,"sources":["theme.js","app.js","index.js"],"names":["STORAGE_KEY","COLOR_MODE_KEY","modeToggleButton","document","querySelector","modeToggleText","modeToggleStatus","sun","moon","getCSSCustomProp","propKey","response","getComputedStyle","documentElement","getPropertyValue","length","replace","trim","applySetting","passedSetting","currentSetting","localStorage","getItem","setAttribute","setTextAndIcon","innerText","classList","add","remove","toggleSetting","setItem","addEventListener","evt","BASE","btn","city","cityIcon","websiteText","websiteLink","webIcon","twitterText","twitterLink","twitterIcon","companyText","companyIcon","removePreviousSearchStyles","allSvgs","querySelectorAll","allLinks","forEach","svgIcon","style","opacity","link","href","showErrorMessage","input","placeholder","errorMsg","onfocus","applyUnavailable","spanElement","icon","cursor","applyAvailable","getUser","username","fetch","data","json","console","log","populateUserCard","user","avatar","src","avatar_url","userName","name","userAccount","login","dateJoined","created_at","accountCreated","Date","toLocaleDateString","userBio","bio","repos","followers","following","public_repos","location","blog","twitter_username","company","event","preventDefault","value","toLowerCase"],"mappings":"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","file":"src.e31bb0bc.js","sourceRoot":"../src","sourcesContent":["const STORAGE_KEY = 'user-color-scheme'; // stores user's preference in local storage\nconst COLOR_MODE_KEY = '--color-mode'; // extracts the current CSS Custom Property value (--color-mode)\n\nconst modeToggleButton = document.querySelector('.toggle');\nconst modeToggleText = document.querySelector('.toggle__text');\nconst modeToggleStatus = document.querySelector('.status');\nconst sun = document.querySelector('.sunSvgEl');\nconst moon = document.querySelector('.moonSvgEl');\n\n// Extracts the --color-mode value:\n// The end result will be either \"light\" or \"dark\", depending on the media query\nfunction getCSSCustomProp(propKey) {\n  let response = getComputedStyle(document.documentElement).getPropertyValue(\n    propKey\n  );\n  if (response.length) {\n    response = response.replace(/\\\"/g, '').trim();\n  }\n  return response;\n}\n\n// This function tries to load a setting that’s either passed in or from local storage as a fallback—then, depending wether a setting was loaded or not.\n// The function applies the data-user-color-scheme attribute if necessary.\n// It then updates the button label and the status text with another function\nfunction applySetting(passedSetting) {\n  let currentSetting = passedSetting || localStorage.getItem(STORAGE_KEY);\n  if (currentSetting) {\n    document.documentElement.setAttribute(\n      'data-user-color-scheme',\n      currentSetting\n    );\n    setTextAndIcon(currentSetting);\n  } else {\n    setTextAndIcon(getCSSCustomProp(COLOR_MODE_KEY));\n  }\n}\n\n// Sets the text depending on what the current colour mode is.\n// Because it's always either 'dark' or 'light' value, either from local storage or the CSS property, the status can display what the colour mode currently is.\nfunction setTextAndIcon(currentSetting) {\n  if (currentSetting === 'dark') {\n    modeToggleText.innerText = 'light';\n    moon.classList.add('hidden');\n    sun.classList.remove('hidden');\n  } else {\n    modeToggleText.innerText = 'dark';\n    moon.classList.remove('hidden');\n    sun.classList.add('hidden');\n  }\n}\n\n// Tries to load the current setting from local storage.\n// It then runs what it got through a switch.\n// If the setting is found, it inverts it.\n// If not, it loads from CSS, then inverts that instead.\n// Then it returns the setting that it calculated.\nfunction toggleSetting() {\n  let currentSetting = localStorage.getItem(STORAGE_KEY);\n\n  switch (currentSetting) {\n    case null:\n      currentSetting =\n        getCSSCustomProp(COLOR_MODE_KEY) === 'dark' ? 'light' : 'dark';\n      break;\n    case 'light':\n      currentSetting = 'dark';\n      break;\n    case 'dark':\n      currentSetting = 'light';\n      break;\n  }\n\n  localStorage.setItem(STORAGE_KEY, currentSetting);\n\n  return currentSetting;\n}\n\nmodeToggleButton.addEventListener('click', evt => {\n  applySetting(toggleSetting());\n});\n\napplySetting();\n","const BASE = 'https://api.github.com/users/';\nconst btn = document.querySelector('.btn');\n\n// Links and text placeholders - social section of the app\nconst city = document.querySelector('.social__city--name');\nconst cityIcon = document.querySelector('.icon-svg-city');\n\nconst websiteText = document.querySelector('.social__website__text');\nconst websiteLink = document.querySelector('.social__website a');\nconst webIcon = document.querySelector('.icon-svg-web');\n\nconst twitterText = document.querySelector('.social__twitter__text');\nconst twitterLink = document.querySelector('.social__twitter a');\nconst twitterIcon = document.querySelector('.icon-svg-twitter');\n\nconst companyText = document.querySelector('.social__company__text');\nconst companyIcon = document.querySelector('.icon-svg-company');\n\n// Removes styling on each search event\nfunction removePreviousSearchStyles() {\n  const allSvgs = document.querySelectorAll('.icon');\n  const allLinks = document.querySelectorAll('.social a');\n\n  // Restores SVG icons to their original styles\n  allSvgs.forEach(svgIcon => {\n    svgIcon.style.opacity = '1';\n  });\n\n  // Deletes the link text and href\n  allLinks.forEach(link => {\n    link.href = '';\n    link.innerText = '';\n    link.style.opacity = '1';\n  });\n\n  // Restores styles for items that are not links\n  city.style.opacity = '1';\n  companyText.style.opacity = '1';\n}\n\n// Shows a tailored error message if user cannot be found\n// Clears the input placeholder text and error message onfocus\nfunction showErrorMessage() {\n  const input = document.querySelector('#search');\n  input.placeholder = '';\n  const errorMsg = document.querySelector('.errorMsg');\n  errorMsg.innerText = 'No results';\n  input.onfocus = () => {\n    errorMsg.innerText = '';\n  };\n}\n\n// If requested info is not available for any of the elements in the social section,\n// this function will apply styles to the defaul text (Not Available)\nfunction applyUnavailable(spanElement, icon) {\n  spanElement.style.opacity = '0.5';\n  spanElement.style.cursor = 'not-allowed';\n  icon.style.opacity = '0.5';\n}\n\n// On the next search, if info is available for the social section, these styles are to apply\nfunction applyAvailable(spanElement, icon) {\n  spanElement.innerText = '';\n  spanElement.style.cursor = 'pointer';\n  icon.style.opacity = '1';\n  // link.style.opacity = 1;\n}\n\n// Takes user's input and appends it to the BASE github API link,\n// then converts the data into json and the json data are then passed into\n// populateUserCard - to display relevant available information\nasync function getUser(username) {\n  const response = await fetch(BASE + username);\n  const data = await response.json();\n  console.log(data);\n  populateUserCard(data);\n}\n\n// Takes in data from the API call to github and populates the fields accordingly\nfunction populateUserCard(user) {\n  // Updates avatar\n  const avatar = document.querySelector('.user__avatar');\n  avatar.src = user.avatar_url;\n\n  // Updates user's name\n  const userName = document.querySelector('.user__name');\n  if (user.name) {\n    userName.innerText = user.name;\n  } else {\n    userName.innerText = 'No name';\n  }\n\n  // Updates user's login\n  const userAccount = document.querySelector('.user__account');\n  if (user.login) {\n    userAccount.innerText = `@${user.login}`;\n  } else {\n    userAccount.innerText = 'No information';\n    showErrorMessage();\n  }\n\n  // Updates the date the user joined GitHub\n  const dateJoined = document.querySelector('.user__creation');\n  if (user.created_at) {\n    let accountCreated = new Date(user.created_at);\n    dateJoined.innerText = `Joined ${accountCreated.toLocaleDateString()}`;\n  } else {\n    dateJoined.innerText = `No information`;\n  }\n\n  // Updates user's bio\n  const userBio = document.querySelector('.profile__intro');\n  if (user.bio) {\n    userBio.innerText = user.bio;\n  } else {\n    userBio.innerText = `No information is available`;\n  }\n\n  // Updates the table\n  const repos = document.querySelector('.profile__repos');\n  const followers = document.querySelector('.profile__followers');\n  const following = document.querySelector('.profile__following');\n  if (!user.login) {\n    repos.innerText = 'n/a';\n    followers.innerText = 'n/a';\n    following.innerText = 'n/a';\n  } else {\n    repos.innerText = user.public_repos;\n    followers.innerText = user.followers;\n    following.innerText = user.following;\n  }\n\n  // Updates the links and text in the social section\n  // User location (span)\n  if (!user.location) {\n    city.innerText = 'Not Available';\n    applyUnavailable(city, cityIcon);\n  } else {\n    city.innerText = '';\n    // city.style.cursor = 'pointer';\n    // cityIcon.style.opacity = '1';\n    applyAvailable(city, cityIcon);\n    city.innerText = user.location;\n  }\n\n  // User's website: span if not available or link if available\n  if (!user.blog) {\n    websiteText.innerText = 'Not Available';\n    applyUnavailable(websiteText, webIcon);\n  } else {\n    applyAvailable(websiteText, webIcon);\n    websiteLink.href = user.blog;\n    websiteLink.innerText = user.blog;\n    websiteLink.style.opacity = 1;\n  }\n\n  // User's twitter: span if not available or link if available\n  if (!user.twitter_username) {\n    twitterText.innerText = 'Not Available';\n    applyUnavailable(twitterText, twitterIcon);\n  } else {\n    applyAvailable(twitterText, twitterIcon);\n    twitterLink.href = `https://twitter.com/${user.twitter_username}`;\n    twitterLink.innerText = user.twitter_username;\n    twitterLink.style.opacity = 1;\n  }\n\n  // User's company name (span)\n  if (!user.company) {\n    companyText.innerText = 'Not Available';\n    applyUnavailable(companyText, companyIcon);\n  } else {\n    applyAvailable(companyText, companyIcon);\n    companyText.innerText = user.company;\n  }\n}\n\n// EVENT LISTENERS\nbtn.addEventListener('click', event => {\n  event.preventDefault();\n  removePreviousSearchStyles();\n  const input = document.querySelector('#search');\n  const username = input.value.toLowerCase();\n  if (username) {\n    getUser(username);\n    input.value = '';\n  }\n});\n","import './theme';\nimport './app';\n"]}